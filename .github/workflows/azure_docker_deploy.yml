name: Deploy Workflow 1

on:
  workflow_dispatch: # Trigger on manual run

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check Secret Access
        run: |
          echo "Checking if secrets are accessible..."
          if [ -z "${{ secrets.AZURE_CREDENTIALS }}" ]; then
            echo "AZURE_CREDENTIALS is not set."
          else
            echo "AZURE_CREDENTIALS is set."
          fi

      - name: Azure login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: |
          echo "Current directory is $(pwd)"
          cd timeentrytf  
          echo "Current directory is $(pwd)"
          ACR_USERNAME=$(az acr credential show --name "timeentrydenextacr3333" --query username --output tsv)
          ACR_PASSWORD=$(az acr credential show --name "timeentrydenextacr3333" --query "passwords[0].value" --output tsv)

          export TF_VAR_acr_username="$ACR_USERNAME"
          export TF_VAR_acr_password="$ACR_PASSWORD"
          export ARM_TENANT_ID=$AZURE_TENANT_ID
          export ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID
          export ARM_CLIENT_ID=$AZURE_CLIENT_ID
          export ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET

          echo "Current directory is $(pwd)"
          terraform init
          terraform refresh
          terraform plan -var="acr_username=${TF_VAR_acr_username}" -var="acr_password=${TF_VAR_acr_password}"
          terraform apply -auto-approve -var="acr_username=${TF_VAR_acr_username}" -var="acr_password=${TF_VAR_acr_password}"

      - name: Push Docker Image
        run: |
          cd timeentrytf  
          echo "ACR_LOGIN_SERVER=$(terraform output -raw acr_login_server)" >> $GITHUB_ENV
          ACR_CREDENTIALS=$(az acr credential show --name "$(terraform output -raw acr_name)" --resource-group "$(terraform output -raw resource_group_name)")
          ACR_USERNAME=$(echo $ACR_CREDENTIALS | jq -r '.username')
          ACR_PASSWORD=$(echo $ACR_CREDENTIALS | jq -r '.passwords[0].value')
          echo "ACR_USERNAME=$ACR_USERNAME" >> $GITHUB_ENV
          echo "ACR_PASSWORD=$ACR_PASSWORD" >> $GITHUB_ENV
          az acr login --name "$(terraform output -raw acr_name)"
          echo "Current directory is $(pwd)"
          cd ..
          echo "Current directory is $(pwd)"
          cd timeentrydenjs2
          echo "Current directory is $(pwd)"
          docker build -t $ACR_LOGIN_SERVER/timeentrydenext:latest .
          docker push $ACR_LOGIN_SERVER/timeentrydenext:latest
          az webapp config container set \
            --name "$(terraform output -raw web_app_name)" \
            --resource-group "$(terraform output -raw resource_group_name)" \
            --docker-registry-server-url "https://$ACR_LOGIN_SERVER" \
            --docker-registry-server-user "$ACR_USERNAME" \
            --docker-registry-server-password "$ACR_PASSWORD" \
            --docker-custom-image-name "$ACR_LOGIN_SERVER/timeentrydenext:latest"
